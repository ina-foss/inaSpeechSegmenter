# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload üêç distributions üì¶ to PyPI and TestPyPI

on:  
  push:
    tags:
      - 'v*'

jobs:
  check-tag-branch:
    runs-on: ubuntu-latest
    steps:
    - name: get tag commit hash
      id: tag-commit-hash
      run: |
        hash=${{ GITHUB.SHA }}
        echo "::set-output name=tag-hash::${hash}"
        echo $hash
    - name: checkout master
      uses: actions/checkout@v2
      with:
        ref: master
    - name: get latest master commit hash
      id: master-commit-hash
      run: |
        hash=$(git log -n1 --format=format:"%H")
        echo "::set-output name=master-hash::${hash}"
        echo $hash
    - name: exit if tag commit hash don't match master commit hash
      if: steps.tag-commit-hash.outputs.tag-hash != steps.master-commit-hash.outputs.master-hash
      run: exit 1

  pytest:
    needs: [check-tag-branch]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install ffmpeg
      run : |
        sudo apt-get update && sudo apt-get install -y ffmpeg
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

  deploy:
    needs: [pytest]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package on test PyPi
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_INASPEECHSEGMENTER_TOKEN }}
#        password: ${{ secrets.TEST_PYPI_INASPEECHSEGMENTER_TOKEN }}
#        repository_url: https://test.pypi.org/legacy/
